c
@content.inspect
print @content
@content.encode('US-ASCII')
@content.encode('UTF-16BE')
Encoding.name_list.each {|name| puts "#{name}:  #{@content.force_encoding(name)}"}
Encoding.name_list.each {|name| @content.force_encoding(name)}
Encoding.name_list.each {|name| @content.force_encoding(name).inspect}
Encoding.name_list.each {|name| "#{name}:  #{@content.force_encoding(name)}".inspect}
Encoding.name_list.each {|name| inspect "#{name}:  #{@content.force_encoding(name)}"}
Encoding.name_list.each {|name| print "#{name}:  #{@content.force_encoding(name)}"}
@content.encode("UTF-8")
@content.encode("BINARY")
@content.encode("UTF-8")
@content.encode("US-ASCII")
@content.encode("ASCII-8BIT")
@content.encode("US-ASCII")
@content.encoding
c
n
http
n
uri.port
uri.host
uri
n
c
print content.encode('ascii')
print content
content.encode('us-ascii')
content.encode('ascii-8bit')
content.encode('ascii')
content.encode('ascii-8')
content.encode('ASCII-8BIT')
content
response.body.encode('utf-8')
response.body
response.decode_content
response.encoding
response.headers
response
content.encode('utf-8')
content.encode('utf-11')
content.encode('ascii-ii')
content.encode('ascii-11')
content.encode('ascii-8')
content.encode('ascii')
content.force_encoding('ascii')
content.force_encoding('ISO-8859-1')
content.bytes.max
content.bytes
content.force_encoding('ISO-8859-5')
content.encode('utf-8')
content
print content
content
decoded = content.decode
content.encoding
content.encoding?
content.is_a?(String)
content
c
response.status_code
response.status
response
c
response
c
response
c
response
c
n
s
url.port
url.host
request
n
url.to_s
url
n
raw_url
n
url
c
n
